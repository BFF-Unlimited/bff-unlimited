// <auto-generated />
using System;
using Bff.WebApi.Services.Administrations.DataAccess.Mysql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bff.WebApi.Services.Administrations.Migrations
{
    [DbContext(typeof(AdministrationContext))]
    [Migration("20220927145958_EntiteitRelatiesToegevoegd")]
    partial class EntiteitRelatiesToegevoegd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Absentie", b =>
                {
                    b.Property<Guid>("AbsentieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LeerlingId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AbsentieId");

                    b.HasIndex("LeerlingId");

                    b.ToTable("Absenties");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Groep", b =>
                {
                    b.Property<Guid>("GroepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("VestigingId")
                        .HasColumnType("char(36)");

                    b.HasKey("GroepId");

                    b.HasIndex("VestigingId");

                    b.ToTable("Groep");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Koppeling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Koppelingen");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.LaatstBekekenPagina", b =>
                {
                    b.Property<Guid>("LaatstBekekenPaginaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("LaatstBekekenPaginaId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("LaatstBekekenPaginas");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Leerling", b =>
                {
                    b.Property<Guid>("LeerlingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("GroepId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LeerlingId");

                    b.HasIndex("GroepId");

                    b.ToTable("Leerlingen");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Notitie", b =>
                {
                    b.Property<Guid>("NotitieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfOccurrence")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("LeerlingId")
                        .HasColumnType("char(36)");

                    b.HasKey("NotitieId");

                    b.HasIndex("LeerlingId");

                    b.ToTable("Notities");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Permission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Vestiging", b =>
                {
                    b.Property<Guid>("VestigingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VestigingId");

                    b.ToTable("Vestiging");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Absentie", b =>
                {
                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.Leerling", "Leerling")
                        .WithMany("Absenties")
                        .HasForeignKey("LeerlingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerling");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Groep", b =>
                {
                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.Vestiging", "Vestiging")
                        .WithMany()
                        .HasForeignKey("VestigingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vestiging");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.LaatstBekekenPagina", b =>
                {
                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Leerling", b =>
                {
                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.Groep", "Groep")
                        .WithMany("Leerlingen")
                        .HasForeignKey("GroepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groep");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Notitie", b =>
                {
                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.Leerling", "Leerling")
                        .WithMany("Notities")
                        .HasForeignKey("LeerlingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerling");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Permission", b =>
                {
                    b.HasOne("Bff.WebApi.Services.Administrations.DataAccess.Entities.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Groep", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.Leerling", b =>
                {
                    b.Navigation("Absenties");

                    b.Navigation("Notities");
                });

            modelBuilder.Entity("Bff.WebApi.Services.Administrations.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
