using System.Globalization;

namespace Bff.WebApi.Handlers
{
    public sealed class BlockPentestingMiddleware
    {
        private readonly RequestDelegate next;
        private static readonly Random Random = new Random();

        public BlockPentestingMiddleware(RequestDelegate next)
        {
            this.next = next;
        }

        public Task Invoke(HttpContext httpContext)
        {
            if (null == httpContext || null == httpContext.Request || null == httpContext.Request.Path || null == httpContext.Request.Path.Value)
#pragma warning disable CS8604 // Possible null reference argument.
                return this.next.Invoke(httpContext);
#pragma warning restore CS8604 // Possible null reference argument.

            if (!httpContext.Request.Path.Value.EndsWith(".php", true, CultureInfo.InvariantCulture))
                return this.next.Invoke(httpContext);

            httpContext.Response.StatusCode = 403;
            return httpContext.Response.WriteAsync(GetQuote());
        }

        private static string GetQuote() =>
            Random.Next(7) switch
            {
                0 => "Pentesting with public tools is only for fools",
                1 => "This is not the webserver you are looking for. Move along!",
                2 => "I can haz botz. KTXBYE!",
                3 => "I've got 99 problems but PHP ain't one. However... the bitch is one.",
                4 => "Go away. I'm busy.",
                5 => "So close! But no, not this time.",
                _ => "Act like a tree and leaf"
            };
    }
}
